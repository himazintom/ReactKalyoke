#docker-compose.yml
services:
  # MariaDB service
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: react-kalyoke-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - ./volumes/db_data:/var/lib/mysql
    tty: true
    stdin_open: true
    networks:
      react-kalyoke-net:
        ipv4_address: 172.18.0.2

  # Flask service
  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    container_name: react-kalyoke-flask
    shm_size: '4g'  # 共有メモリサイズを4GBに拡大
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      GENIUS_TOKEN: ${GENIUS_TOKEN}
      BRAVE_TOKEN: ${BRAVE_TOKEN}
    volumes:
      - socket:/socket  # uwsgi.sockを共有するためのボリューム
      - ./volumes/musics:/musics  # 共有ボリューム
    depends_on:
      - db
    networks:
      react-kalyoke-net:
        ipv4_address: 172.18.0.3
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu]

  # React service
  react:
    build:
      context: ./react
      dockerfile: Dockerfile
      args: #ビルド時に必要な変数を受け渡す
        REACT_APP_HOST_URL: ${REACT_APP_HOST_URL}
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_GOOGLE_API_KEY: ${GOOGLE_API_KEY}
        REACT_APP_SEARCH_ENGINE_ID: ${SEARCH_ENGINE_ID}
        REACT_APP_LYRIC_UPDATE_INTERVAL_DAY: ${LYRIC_UPDATE_INTERVAL_DAY}

    container_name: react-kalyoke-web
    environment:
      REACT_APP_HOST_URL: ${REACT_APP_HOST_URL}
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      REACT_APP_SEARCH_ENGINE_ID: ${SEARCH_ENGINE_ID}
      REACT_APP_LYRIC_UPDATE_INTERVAL_DAY: ${LYRIC_UPDATE_INTERVAL_DAY}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./volumes/musics:/musics  # 共有ボリューム
      - socket:/socket  # uwsgi.sockを共有するためのボリューム
    networks:
      react-kalyoke-net:
        ipv4_address: 172.18.0.4

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   container_name: react-kalyoke-nginx
  #   environment:
  #     REACT_APP_HOST_URL: ${REACT_APP_HOST_URL}
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   volumes:
  #     - ./volumes/musics:/musics  # 共有ボリューム
  #     - socket:/socket  # uwsgi.sockを共有するためのボリューム
  #   networks:
  #     react-kalyoke-net:
  #       ipv4_address: 172.18.0.5

volumes:
  db_data:
  musics:  # 共有ボリュームの定義
  socket:

networks:
  react-kalyoke-net:
    driver: bridge
    name: react-kalyoke-net
    ipam:
     driver: default
     config:
       - subnet: 172.18.0.0/24